#!/bin/sh -e

# This script tries to generate config.mk
# based on the tool path and the board name.
# At some point this will probably have to
# be replaced with something more powerful,
# like kconfig.

TOOL_PREFIX=$1

[ -z $TOOL_PREFIX ] && echo "usage: $0 <tool prefix>" && exit 1

GCC=${TOOL_PREFIX}-gcc
LD=${TOOL_PREFIX}-ld
AS=${TOOL_PREFIX}-as
OBJCOPY=${TOOL_PREFIX}-objcopy

for prog in $GCC $LD $AS $OBJCOPY; do
    [ -z $(which $prog) ] && echo "$prog not in your PATH?" && exit 1
done

CFLAGS="-g -Os ${CFLAGS}"

# capture the cross-gcc linker paths
# so that a direct invocation of ld
# will include a path to libgcc.a and friends
LDPATH=$($GCC -print-search-dirs | sed -n 's/^libraries:\ =\(.*\)/\1/p')
for path in $(echo $LDPATH | tr ':' '\n'); do
	[ -d $path ] || continue
	path=$(readlink -nf $path)
	echo "including compiler path" $path
	LDFLAGS="-L${path} ${LDFLAGS}"
done

cat > config.mk <<-EOF
# Autogenerated tool configuration
# DO NOT EDIT! Edit config.sh instead.
CC=$GCC
LD=$LD
AS=$AS
OBJCOPY=$OBJCOPY
CFLAGS=$CFLAGS
LDFLAGS=$LDFLAGS
EOF

echo "enter a board name:"
read board
[ -f ${board}/board.config ] || (echo "no config ${board}/board.config" && exit 1)

cat ${board}/board.config >> config.mk
